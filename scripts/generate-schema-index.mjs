import fs from 'node:fs'
import path from 'node:path'

const ROOT = process.cwd()
const SCHEMAS_DIR = path.join(ROOT, 'schemas')

const files = []
const walk = (dir) => fs.readdirSync(dir, { withFileTypes: true }).forEach(d => {
    const f = path.join(dir, d.name)
    if (d.isDirectory()) walk(f)
    else if (/\.(jsx?|tsx?)$/.test(d.name) && d.name !== 'index.js') files.push(f)
})
walk(SCHEMAS_DIR)

const rel = (p) => './' + path.relative(SCHEMAS_DIR, p).replace(/\\/g, '/')
const stem = (p) => path.basename(p).replace(/\.[^.]+$/, '')

const imports = files.map((f, i) => `import * as m${i} from '${rel(f)}'`)
const pickFn = `
const pick = (m) => {
  if (m?.default && typeof m.default === 'object' && m.default.name && m.default.type) return m.default
  const any = Object.values(m).find(x => x && typeof x === 'object' && x.name && x.type)
  return any
}
`
const list = `export const schemaTypes = [
${files.map((_, i) => `  pick(m${i})`).join(',\n')}
].filter(Boolean)
export default schemaTypes
`

const out = `// AUTO-GENERATED by scripts/generate-schema-index.mjs
${imports.join('\n')}
${pickFn}
${list}
`

fs.writeFileSync(path.join(SCHEMAS_DIR, 'index.js'), out, 'utf8')
console.log('Wrote schemas/index.js with', files.length, 'entries.')
